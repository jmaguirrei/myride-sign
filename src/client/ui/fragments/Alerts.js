export default (client, id) => {  return client.hoc({    id,    state(props, store) {      const alert = store.alerts.find(item => item.isVisible);      return {        alertText: store.utils.get(alert, 'message', ''),      };    },    classes: {      alert: `        background: ${client.lib.Colors.RED_WARNING};        box-shadow: inset 0px 0px 6px hsla(0,0%,0%,0.5);        color: white;        font-size: 16px;        left: 0;        padding: 10px;        position: absolute;        text-align: center;        top: 1px;        transition: all .3s ease;        width: 100%;        z-index: 10;      `,    },    styles: {      alert: isVisible => `        opacity: ${isVisible ? 1 : 0};        ${client.prefix('transform', `translateY(${isVisible ? 0 : -100}%)`)}      `,    },    render({ classes, styles, state, utils }) {      return (        <div class={classes('alert')} style={styles.alert(state.alertText)}>          { utils.localize(state.alertText) }        </div>      );    }  });};