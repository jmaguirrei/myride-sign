export default (client, id) => {  const { Input } = client.ui.components;  const { ForgotPassword, TogglePassword } = client.ui.fragments;  return client.hoc({    id,    state(props, store) {      return {        password: store.get('signin.password'),        isPasswordVisible: store.get('signin.password.isVisible'),      };    },    actions(props, store) {      return {        onTextChanged: e => {          store.set({ 'signin.password': e.target.value });        },      };    },    classes: {      wrapper: `        padding: 5px 10px;      `,      inputWrapper: `        position: relative;        display: flex;        align-items: center;      `,    },    render({ state, classes, actions }) {      const { password, isPasswordVisible } = state;      return (        <div class={classes('wrapper')}>          <div class={classes('inputWrapper')}>            <Input              type={isPasswordVisible ? 'text' : 'password'}              placeholder='Password'              value={password}              onTextChanged={actions.onTextChanged}              autocomplete='current-password'            />            <TogglePassword page='signin'/>          </div>          <ForgotPassword/>        </div>      );    }  });};